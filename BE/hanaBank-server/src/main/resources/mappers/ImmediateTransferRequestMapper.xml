<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.hana_bank.mapper.ImmediateTransferRequestMapper">

    <resultMap id="immediateTransferRequestResultMap" type="com.example.hana_bank.entity.ImmediateTransferRequest">
        <id property="id" column="id"/>
        <result property="userCi" column="user_ci"/>
        <result property="fromAccount" column="from_account"/>
        <result property="toAccount" column="to_account"/>
        <result property="toBankCode" column="to_bank_code"/>
        <result property="toBankName" column="to_bank_name"/>
        <result property="amount" column="amount"/>
        <result property="beneficiaryName" column="beneficiary_name"/>
        <result property="memo" column="memo"/>
        <result property="requestType" column="request_type"/>
        <result property="relatedId" column="related_id"/>
        <result property="status" column="status"/>
        <result property="transactionId" column="transaction_id"/>
        <result property="failureReason" column="failure_reason"/>
        <result property="requestedAt" column="requested_at"/>
        <result property="processedAt" column="processed_at"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <!-- 즉시 이체 요청 등록 -->
    <insert id="insertImmediateTransferRequest" parameterType="com.example.hana_bank.entity.ImmediateTransferRequest">
        <selectKey keyProperty="id" resultType="Long" order="BEFORE">
            SELECT NVL(MAX(id), 0) + 1 FROM immediate_transfer_requests
        </selectKey>
        INSERT INTO immediate_transfer_requests (
            id, user_ci, from_account, to_account, to_bank_code, to_bank_name,
            amount, beneficiary_name, memo, request_type, related_id, status,
            transaction_id, failure_reason, requested_at, processed_at,
            created_at, updated_at
        ) VALUES (
            #{id}, #{userCi}, #{fromAccount}, #{toAccount}, #{toBankCode}, #{toBankName},
            #{amount}, #{beneficiaryName}, #{memo,jdbcType=VARCHAR}, #{requestType}, #{relatedId,jdbcType=NUMERIC},
            #{status}, #{transactionId,jdbcType=VARCHAR}, #{failureReason,jdbcType=VARCHAR},
            #{requestedAt,jdbcType=TIMESTAMP}, #{processedAt,jdbcType=TIMESTAMP},
            CURRENT_TIMESTAMP, CURRENT_TIMESTAMP
        )
    </insert>

    <!-- ID로 즉시 이체 요청 조회 -->
    <select id="findById" parameterType="long" resultMap="immediateTransferRequestResultMap">
        SELECT * FROM immediate_transfer_requests WHERE id = #{id}
    </select>

    <!-- 전체 즉시 이체 요청 조회 -->
    <select id="findAll" resultMap="immediateTransferRequestResultMap">
        SELECT * FROM immediate_transfer_requests ORDER BY requested_at DESC
    </select>

    <!-- 즉시 이체 요청 업데이트 -->
    <update id="updateImmediateTransferRequest" parameterType="com.example.hana_bank.entity.ImmediateTransferRequest">
        UPDATE immediate_transfer_requests SET
            user_ci = #{userCi},
            from_account = #{fromAccount},
            to_account = #{toAccount},
            to_bank_code = #{toBankCode},
            to_bank_name = #{toBankName},
            amount = #{amount},
            beneficiary_name = #{beneficiaryName},
            memo = #{memo},
            request_type = #{requestType},
            related_id = #{relatedId},
            status = #{status},
            transaction_id = #{transactionId},
            failure_reason = #{failureReason},
            requested_at = #{requestedAt},
            processed_at = #{processedAt}
        WHERE id = #{id}
    </update>

    <!-- 즉시 이체 요청 삭제 -->
    <delete id="deleteById" parameterType="long">
        DELETE FROM immediate_transfer_requests WHERE id = #{id}
    </delete>

    <!-- 사용자별 즉시 이체 요청 조회 -->
    <select id="findByUserCi" parameterType="string" resultMap="immediateTransferRequestResultMap">
        SELECT * FROM immediate_transfer_requests
        WHERE user_ci = #{userCi}
        ORDER BY requested_at DESC
    </select>

    <!-- 상태별 즉시 이체 요청 조회 -->
    <select id="findByStatus" parameterType="string" resultMap="immediateTransferRequestResultMap">
        SELECT * FROM immediate_transfer_requests
        WHERE status = #{status}
        ORDER BY requested_at DESC
    </select>

    <!-- 요청 유형별 조회 -->
    <select id="findByRequestType" parameterType="string" resultMap="immediateTransferRequestResultMap">
        SELECT * FROM immediate_transfer_requests
        WHERE request_type = #{requestType}
        ORDER BY requested_at DESC
    </select>

    <!-- 관련 ID별 조회 -->
    <select id="findByRelatedId" parameterType="long" resultMap="immediateTransferRequestResultMap">
        SELECT * FROM immediate_transfer_requests
        WHERE related_id = #{relatedId}
        ORDER BY requested_at DESC
    </select>

    <!-- 상태 업데이트 -->
    <update id="updateStatus">
        UPDATE immediate_transfer_requests
        SET status = #{status}
        WHERE id = #{id}
    </update>

    <!-- 성공 처리 업데이트 -->
    <update id="updateAsSuccess">
        UPDATE immediate_transfer_requests
        SET status = 'SUCCESS',
            transaction_id = #{transactionId},
            failure_reason = NULL,
            processed_at = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>

    <!-- 실패 처리 업데이트 -->
    <update id="updateAsFailed">
        UPDATE immediate_transfer_requests
        SET status = 'FAILED',
            failure_reason = #{failureReason},
            transaction_id = NULL,
            processed_at = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>

    <!-- 사용자별 상태별 조회 -->
    <select id="findByUserCiAndStatus" resultMap="immediateTransferRequestResultMap">
        SELECT * FROM immediate_transfer_requests
        WHERE user_ci = #{userCi}
        AND status = #{status}
        ORDER BY requested_at DESC
    </select>

    <!-- 사용자별 요청 유형별 조회 -->
    <select id="findByUserCiAndRequestType" resultMap="immediateTransferRequestResultMap">
        SELECT * FROM immediate_transfer_requests
        WHERE user_ci = #{userCi}
        AND request_type = #{requestType}
        ORDER BY requested_at DESC
    </select>

    <!-- 개수 조회 -->
    <select id="countByUserCi" parameterType="string" resultType="int">
        SELECT COUNT(1) FROM immediate_transfer_requests WHERE user_ci = #{userCi}
    </select>

    <select id="countByStatus" parameterType="string" resultType="int">
        SELECT COUNT(1) FROM immediate_transfer_requests WHERE status = #{status}
    </select>

    <select id="countByRequestType" parameterType="string" resultType="int">
        SELECT COUNT(1) FROM immediate_transfer_requests WHERE request_type = #{requestType}
    </select>

</mapper>