<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.hana_bank.mapper.AutoTransferContractMapper">
    
    <resultMap id="autoTransferContractResultMap" type="com.example.hana_bank.entity.AutoTransferContract">
        <id property="id" column="id"/>
        <result property="userCi" column="user_ci"/>
        <result property="fromAccount" column="from_account"/>
        <result property="toAccount" column="to_account"/>
        <result property="toBankCode" column="to_bank_code"/>
        <result property="toBankName" column="to_bank_name"/>
        <result property="amount" column="amount"/>
        <result property="transferDay" column="transfer_day"/>
        <result property="beneficiaryName" column="beneficiary_name"/>
        <result property="memo" column="memo"/>
        <result property="status" column="status"/>
        <result property="nextTransferDate" column="next_transfer_date" jdbcType="DATE"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>
    
    <!-- 자동이체 계약 등록 -->
    <insert id="insertAutoTransferContract" parameterType="com.example.hana_bank.entity.AutoTransferContract">
        <selectKey keyProperty="id" resultType="long" order="BEFORE">
            SELECT auto_transfer_contracts_seq.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO auto_transfer_contracts (
            id, user_ci, from_account, to_account, to_bank_code, to_bank_name,
            amount, transfer_day, beneficiary_name, memo, status, next_transfer_date,
            created_at, updated_at
        ) VALUES (
            #{id}, #{userCi}, #{fromAccount}, #{toAccount}, #{toBankCode}, #{toBankName},
            #{amount}, #{transferDay}, #{beneficiaryName}, #{memo}, #{status}, #{nextTransferDate},
            CURRENT_TIMESTAMP, CURRENT_TIMESTAMP
        )
    </insert>
    
    <!-- ID로 자동이체 계약 조회 -->
    <select id="findById" parameterType="long" resultMap="autoTransferContractResultMap">
        SELECT 
            id, user_ci, from_account, to_account, to_bank_code, to_bank_name,
            amount, transfer_day, beneficiary_name, memo, status,
            next_transfer_date,
            created_at,
            updated_at
        FROM auto_transfer_contracts 
        WHERE id = #{id}
    </select>
    
    <!-- 전체 자동이체 계약 조회 -->
    <select id="findAll" resultMap="autoTransferContractResultMap">
        SELECT 
            id, user_ci, from_account, to_account, to_bank_code, to_bank_name,
            amount, transfer_day, beneficiary_name, memo, status,
            next_transfer_date, created_at, updated_at
        FROM auto_transfer_contracts ORDER BY created_at DESC
    </select>
    
    <!-- 자동이체 계약 업데이트 -->
    <update id="updateAutoTransferContract" parameterType="com.example.hana_bank.entity.AutoTransferContract">
        UPDATE auto_transfer_contracts SET
            user_ci = #{userCi},
            from_account = #{fromAccount},
            to_account = #{toAccount},
            to_bank_code = #{toBankCode},
            to_bank_name = #{toBankName},
            amount = #{amount},
            transfer_day = #{transferDay},
            beneficiary_name = #{beneficiaryName},
            memo = #{memo},
            status = #{status},
            next_transfer_date = #{nextTransferDate}
        WHERE id = #{id}
    </update>
    
    <!-- 자동이체 계약 삭제 -->
    <delete id="deleteById" parameterType="long">
        DELETE FROM auto_transfer_contracts WHERE id = #{id}
    </delete>
    
    <!-- 사용자별 자동이체 계약 조회 -->
    <select id="findByUserCi" parameterType="string" resultMap="autoTransferContractResultMap">
        SELECT 
            id, user_ci, from_account, to_account, to_bank_code, to_bank_name,
            amount, transfer_day, beneficiary_name, memo, status,
            next_transfer_date, created_at, updated_at
        FROM auto_transfer_contracts 
        WHERE user_ci = #{userCi} 
        ORDER BY created_at DESC
    </select>
    
    <!-- 출금계좌별 자동이체 계약 조회 -->
    <select id="findByFromAccount" parameterType="string" resultMap="autoTransferContractResultMap">
        SELECT 
            id, user_ci, from_account, to_account, to_bank_code, to_bank_name,
            amount, transfer_day, beneficiary_name, memo, status,
            next_transfer_date, created_at, updated_at
        FROM auto_transfer_contracts 
        WHERE from_account = #{fromAccount} 
        ORDER BY created_at DESC
    </select>
    
    <!-- 상태별 자동이체 계약 조회 -->
    <select id="findByStatus" parameterType="string" resultMap="autoTransferContractResultMap">
        SELECT 
            id, user_ci, from_account, to_account, to_bank_code, to_bank_name,
            amount, transfer_day, beneficiary_name, memo, status,
            next_transfer_date, created_at, updated_at
        FROM auto_transfer_contracts 
        WHERE status = #{status} 
        ORDER BY created_at DESC
    </select>
    
    <!-- 활성 상태의 자동이체 계약 조회 -->
    <select id="findActiveContracts" resultMap="autoTransferContractResultMap">
        SELECT 
            id, user_ci, from_account, to_account, to_bank_code, to_bank_name,
            amount, transfer_day, beneficiary_name, memo, status,
            next_transfer_date, created_at, updated_at
        FROM auto_transfer_contracts 
        WHERE status = 'ACTIVE' 
        ORDER BY next_transfer_date ASC, created_at DESC
    </select>
    
    <!-- 특정 이체일에 실행할 자동이체 계약 조회 (스케줄러에서 사용) -->
    <select id="findContractsToExecute" parameterType="int" resultMap="autoTransferContractResultMap">
        SELECT 
            id, user_ci, from_account, to_account, to_bank_code, to_bank_name,
            amount, transfer_day, beneficiary_name, memo, status,
            next_transfer_date, created_at, updated_at
        FROM auto_transfer_contracts 
        WHERE status = 'ACTIVE' 
        AND transfer_day = #{transferDay}
        AND (next_transfer_date &lt;= TRUNC(SYSDATE) OR next_transfer_date IS NULL)
        ORDER BY created_at ASC
    </select>
    
    <!-- 특정 날짜에 실행할 자동이체 계약 조회 (다음 이체일 기준) -->
    <select id="findContractsToExecuteByDate" parameterType="java.time.LocalDate" resultMap="autoTransferContractResultMap">
        SELECT 
            id, user_ci, from_account, to_account, to_bank_code, to_bank_name,
            amount, transfer_day, beneficiary_name, memo, status,
            next_transfer_date, created_at, updated_at
        FROM auto_transfer_contracts 
        WHERE status = 'ACTIVE' 
        AND next_transfer_date = #{targetDate}
        ORDER BY created_at ASC
    </select>
    
    <!-- 사용자별 활성 자동이체 계약 조회 -->
    <select id="findActiveContractsByUserCi" parameterType="string" resultMap="autoTransferContractResultMap">
        SELECT 
            id, user_ci, from_account, to_account, to_bank_code, to_bank_name,
            amount, transfer_day, beneficiary_name, memo, status,
            next_transfer_date, created_at, updated_at
        FROM auto_transfer_contracts 
        WHERE user_ci = #{userCi} 
        AND status = 'ACTIVE'
        ORDER BY created_at DESC
    </select>
    
    <!-- 자동이체 계약 상태 업데이트 -->
    <update id="updateStatus">
        UPDATE auto_transfer_contracts 
        SET status = #{status}
        WHERE id = #{id}
    </update>
    
    <!-- 다음 이체일 업데이트 -->
    <update id="updateNextTransferDate">
        UPDATE auto_transfer_contracts 
        SET next_transfer_date = #{nextTransferDate}
        WHERE id = #{id}
    </update>
    
    <!-- 자동이체 계약 존재 여부 확인 -->
    <select id="existsById" parameterType="long" resultType="boolean">
        SELECT COUNT(1) > 0 FROM auto_transfer_contracts WHERE id = #{id}
    </select>
    
    <!-- 사용자의 특정 계좌에 대한 활성 자동이체 존재 여부 확인 -->
    <select id="existsActiveContractByUserCiAndAccount" resultType="boolean">
        <![CDATA[
        SELECT CASE WHEN COUNT(1) > 0 THEN 1 ELSE 0 END FROM auto_transfer_contracts 
        WHERE user_ci = #{userCi} 
        AND from_account = #{fromAccount} 
        AND status = 'ACTIVE'
        ]]>
    </select>
    
    <!-- 자동이체 계약 개수 조회 -->
    <select id="countByUserCi" parameterType="string" resultType="int">
        SELECT COUNT(1) FROM auto_transfer_contracts WHERE user_ci = #{userCi}
    </select>
    
    <!-- 상태별 자동이체 계약 개수 조회 -->
    <select id="countByStatus" parameterType="string" resultType="int">
        SELECT COUNT(1) FROM auto_transfer_contracts WHERE status = #{status}
    </select>
    
    <!-- 사용자별 상태별 자동이체 계약 조회 -->
    <select id="findByUserCiAndStatus" resultMap="autoTransferContractResultMap">
        SELECT 
            id, user_ci, from_account, to_account, to_bank_code, to_bank_name,
            amount, transfer_day, beneficiary_name, memo, status,
            next_transfer_date, created_at, updated_at
        FROM auto_transfer_contracts 
        WHERE user_ci = #{userCi} 
        AND status = #{status}
        ORDER BY created_at DESC
    </select>
    
</mapper>