<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.hana_bank.mapper.AccountMapper">
    
    <resultMap id="accountResultMap" type="com.example.hana_bank.entity.Account">
        <id property="accountId" column="account_id"/>
        <result property="accountNumber" column="account_number"/>
        <result property="accountPassword" column="account_password"/>
        <result property="userCi" column="user_ci"/>
        <result property="accountType" column="account_type"/>
        <result property="balance" column="balance"/>
        <result property="status" column="status"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>
    
    <insert id="insertAccount" parameterType="com.example.hana_bank.entity.Account">
        <selectKey keyProperty="accountId" resultType="long" order="BEFORE">
            SELECT ACCOUNT_SEQ.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO accounts (
            account_id, account_number, account_password, user_ci, account_type, 
            balance, status, created_at, updated_at
        ) VALUES (
            #{accountId}, #{accountNumber}, #{accountPassword}, #{userCi}, #{accountType},
            #{balance}, #{status}, SYSDATE, SYSDATE
        )
    </insert>
    
    <select id="findById" parameterType="long" resultMap="accountResultMap">
        SELECT * FROM accounts WHERE account_id = #{accountId}
    </select>
    
    <select id="findByAccountNumber" parameterType="string" resultMap="accountResultMap">
        SELECT * FROM accounts WHERE account_number = #{accountNumber}
    </select>
    
    <select id="findByUserCi" parameterType="string" resultMap="accountResultMap">
        SELECT * FROM accounts WHERE user_ci = #{userCi} ORDER BY created_at DESC
    </select>
    
    <select id="findAll" resultMap="accountResultMap">
        SELECT * FROM accounts ORDER BY created_at DESC
    </select>
    
    <update id="updateAccount" parameterType="com.example.hana_bank.entity.Account">
        UPDATE accounts SET
            balance = #{balance},
            status = #{status},
            updated_at = SYSDATE
        WHERE account_id = #{accountId}
    </update>
    
    <delete id="deleteAccount" parameterType="long">
        DELETE FROM accounts WHERE account_id = #{accountId}
    </delete>
    
    <select id="existsByAccountNumber" parameterType="string" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END FROM accounts WHERE account_number = #{accountNumber}
    </select>
    
    <select id="generateAccountNumber" resultType="string">
        SELECT '100-' || LPAD(ACCOUNT_NUMBER_SEQ.NEXTVAL, 8, '0') || '-' || LPAD(DBMS_RANDOM.VALUE(1000, 9999), 4, '0') FROM DUAL
    </select>
    
</mapper>
